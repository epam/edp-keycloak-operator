apiVersion: v1
kind: Secret
metadata:
  name: secret-name
type: Opaque
data:
  secretKey: dGVzdAo=

# we use secretKey from secret-name secret for clientSecret field
---
apiVersion: v1.edp.epam.com/v1
kind: KeycloakRealmIdentityProvider
metadata:
  name: keycloakrealmidentityprovider-sample
spec:
  realmRef:
    kind: KeycloakRealm
    name: keycloakrealm-sample
  alias: instagram
  authenticateByDefault: false
  enabled: true
  firstBrokerLoginFlowAlias: "first broker login"
  providerId: "instagram"
  config:
    clientId: "foo"
    clientSecret: "$secret-name:secretKey"
    hideOnLoginPage: "true"
    syncMode: "IMPORT"
    useJwksUrl: "true"
  mappers:
    - name: "test-33221"
      identityProviderMapper: "hardcoded-attribute-idp-mapper"
      identityProviderAlias: "instagram"
      config:
        attribute: "foo"
        "attribute.value": "bar"
        syncMode: "IMPORT"

# We define clientSecret in clear form in CR
---
apiVersion: v1.edp.epam.com/v1
kind: KeycloakRealmIdentityProvider
metadata:
  name: keycloakrealmidentityprovider-sample-with-pass
spec:
  realmRef:
    kind: KeycloakRealm
    name: keycloakrealm-sample
  alias: facebook
  authenticateByDefault: false
  enabled: true
  firstBrokerLoginFlowAlias: "first broker login"
  providerId: "facebook"
  config:
    clientId: "bar"
    clientSecret: "password-in-clear-form"
    hideOnLoginPage: "true"
    syncMode: "IMPORT"
    useJwksUrl: "true"
  mappers:
    - name: "mymapper"
      identityProviderMapper: "hardcoded-attribute-idp-mapper"
      identityProviderAlias: "instagram"
      config:
        attribute: "foo"
        "attribute.value": "bar"
        syncMode: "IMPORT"
